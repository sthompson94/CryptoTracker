{"version":3,"sources":["Components/CryptoCard.js","Components/Ticker.js","Components/Timer.js","Components/Banner.js","Components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["CryptoCard","props","className","classes","nameColor","name","price","sevenDayChange","oneDayChange","Ticker","Component","getData","require","rp","method","uri","qs","start","limit","convert","headers","process","json","gzip","then","response","setState","firstName","data","firstprice","quote","USD","toFixed","first7dayChange","percent_change_7d","first1dayChange","percent_change_24h","secondName","secondprice","second7dayChange","second1dayChange","thirdName","thirdprice","third7dayChange","third1dayChange","fourthName","fourthprice","fourth7dayChange","fourth1dayChange","catch","err","console","log","message","updateInfo","dataFunction","setInterval","state","this","React","Banner","Button","class","href","link","role","text","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78fd7b4a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction CryptoCard(props) {\r\n  return (\r\n    <div className={props.classes}>\r\n        <div className=\"container border border-dark rounded\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-1\"></div>\r\n        <div className=\"col-sm-10\">\r\n          <h1 className={props.nameColor}>{props.name}</h1>\r\n          <h2>Current Price: ${props.price}</h2>\r\n        </div>\r\n        <div className=\"col-sm-1\"></div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-1\"></div>\r\n        <h5 className=\"col-sm-5\">7 day change: {props.sevenDayChange}%</h5>\r\n        <h5 className=\"col-sm-5\">24 hour change: {props.oneDayChange}%</h5>\r\n        <div className=\"col-sm-1\"></div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CryptoCard;\r\n","import React from \"react\";\r\nimport CryptoCard from './CryptoCard';\r\nimport Timer from './Timer'\r\n\r\n\r\n\r\nclass Ticker extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  \r\n  this.state = {\r\n    firstName: \"\",\r\n    firstprice: \"\",\r\n    first7dayChange: \"\",\r\n    first1dayChange: \"\",\r\n    secondName: \"\",\r\n    secondprice: \"\",\r\n    second7dayChange: \"\",\r\n    second1dayChange: \"\",\r\n    thirdName: \"\",\r\n    thirdprice: \"\",\r\n    third7dayChange: \"\",\r\n    third1dayChange: \"\",\r\n    fourthName: \"\",\r\n    fourthprice: \"\",\r\n    fourth7dayChange: \"\",\r\n    fourth1dayChange: \"\",\r\n    };\r\n  }\r\n    //after component mounts get the data, and update it periodically\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.updateInfo();\r\n  }\r\n\r\n  //What is actully seen on the screen\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          {/* <Timer/> */}\r\n          \r\n          \r\n        <CryptoCard\r\n        name = {this.state.firstName}\r\n        price = {this.state.firstprice}\r\n        sevenDayChange = {this.state.first7dayChange}\r\n        oneDayChange = {this.state.first1dayChange}\r\n        nameColor = \"text-success\"\r\n        classes = \"col-sm-12 cryptocard mx-auto\"\r\n        />\r\n        </div>\r\n        <div className=\"row\">\r\n        <CryptoCard\r\n        name = {this.state.secondName}\r\n        price = {this.state.secondprice}\r\n        sevenDayChange = {this.state.second7dayChange}\r\n        oneDayChange = {this.state.second1dayChange}\r\n        classes = \"col-sm-4 cryptocard\"\r\n        />\r\n        <CryptoCard\r\n        name = {this.state.thirdName}\r\n        price = {this.state.thirdprice}\r\n        sevenDayChange = {this.state.third7dayChange}\r\n        oneDayChange = {this.state.third1dayChange}\r\n        classes = \"col-sm-4 centerCard cryptocard\"\r\n        />\r\n        <CryptoCard\r\n        name = {this.state.fourthName}\r\n        price = {this.state.fourthprice}\r\n        sevenDayChange = {this.state.fourth7dayChange}\r\n        oneDayChange = {this.state.fourth1dayChange}\r\n        classes = \"col-sm-4 cryptocard\"\r\n        />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n \r\n\r\n  //Request to Coin1dayChange API to get Cryptocurrency information\r\n  getData = () => {\r\n    const rp = require(\"request-promise\");\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      uri:\r\n        \"https://pro-api.coinmarketcap.com/v1/cryptocurrency/listings/latest\",\r\n      qs: {\r\n        start: \"1\",\r\n        limit: \"50\",\r\n        convert: \"USD\",\r\n      },\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"X-CMC_PRO_API_KEY\": process.env.REACT_APP_API_KEY,\r\n      },\r\n      json: true,\r\n      gzip: true,\r\n    };\r\n\r\n    rp(requestOptions)\r\n      .then((response) => {\r\n        // console.log(\"API call response:\", response);\r\n        \r\n          //grab the data from the API call response and assign propper variables to propper data\r\n        this.setState({\r\n          firstName: response.data[0].name,\r\n          firstprice: response.data[0].quote.USD.price.toFixed(2),\r\n          first7dayChange: response.data[0].quote.USD.percent_change_7d.toFixed(2),\r\n          first1dayChange: response.data[0].quote.USD.percent_change_24h.toFixed(2),\r\n          secondName: response.data[1].name,\r\n          secondprice: response.data[1].quote.USD.price.toFixed(2),\r\n          second7dayChange: response.data[1].quote.USD.percent_change_7d.toFixed(2),\r\n          second1dayChange: response.data[1].quote.USD.percent_change_24h.toFixed(2),\r\n          thirdName: response.data[2].name,\r\n          thirdprice: response.data[2].quote.USD.price.toFixed(3),\r\n          third7dayChange: response.data[2].quote.USD.percent_change_7d.toFixed(2),\r\n          third1dayChange: response.data[2].quote.USD.percent_change_24h.toFixed(2),\r\n          fourthName: response.data[3].name,\r\n          fourthprice: response.data[3].quote.USD.price.toFixed(2),\r\n          fourth7dayChange: response.data[3].quote.USD.percent_change_7d.toFixed(2),\r\n          fourth1dayChange: response.data[3].quote.USD.percent_change_24h.toFixed(2),\r\n        });\r\n      })\r\n      //if theres an error, display the error in the console\r\n      .catch((err) => {\r\n        console.log(\"API call error:\", err.message);\r\n      });\r\n    // console.log(this.state);\r\n  };\r\n\r\n  \r\n//function for updating the displayed data\r\n  updateInfo = () => {\r\n    var dataFunction = this.getData;\r\n    \r\n    setInterval(function(){dataFunction()}, 30000)\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Ticker;\r\n","import React, { Component } from 'react'\r\n\r\nclass Timer extends Component{\r\nconstructor(props){\r\nsuper(props)\r\n\r\nthis.state = {\r\n    countdown: 30,\r\n}\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.loopIncrimentTimer();\r\n}\r\n\r\nresetTimer(){\r\n    this.setState({countdown:30})\r\n}\r\n\r\n\r\n\r\nincrimentTimer(){\r\n    this.setState({countdown: this.state.countdown -1})\r\n}\r\n\r\nloopIncrimentTimer(){\r\n    var incrimentFunction = this.incrimentTimer;\r\n\r\n    setInterval(function(){incrimentFunction()}, 1000)\r\n}\r\n\r\n\r\n\r\nrender(){\r\n    return(\r\n        <div>\r\n            <h3>Refreshing Data in : {this.state.countdown} seconds</h3>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Timer","import React from 'react'\r\n\r\n\r\nfunction Banner (){\r\n    return(\r\n        <div className=\"bg-info banner\">\r\n            <h1 className=\"navbar-text\">Live Cryptocurrenty Prices!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from 'react'\r\n\r\nfunction Button(props){\r\n    return(\r\n        <div>\r\n            <a class=\"btn btn-default\" href={props.link} role=\"button\">{props.text}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Button;","import \"./App.css\";\nimport Ticker from \"./Components/Ticker\";\nimport Banner from \"./Components/Banner\";\nimport Button from \"./Components/Button\";\n\n// Testing for github again\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Banner />\n      <div className=\"container\">\n        <Ticker />\n\n            <Button\n              classes=\"btn btn-default\"\n              link=\"https://bitcoin.org/en/how-it-works\"\n              text=\"Learn about Bitcoin\"\n            />\n          \n            <Button\n              classes=\"btn btn-default\"\n              link=\"https://ethereum.org/en/learn/\"\n              text=\"Learn about Ethereum\"\n            />\n            </div>\n          </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}